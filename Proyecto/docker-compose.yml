# docker-compose.yml  (sin "version:")

services:
  db:
    image: postgres:15-alpine
    container_name: proyecto-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-claro_db_postgres}
      POSTGRES_USER: ${POSTGRES_USER:-user_claro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password_claro}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user_claro} -d ${POSTGRES_DB:-claro_db_postgres}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: proyecto-backend
    command: gunicorn claro_project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
    environment:
      # Django tomar√° todo desde .env
      DATABASE_URL: ${DATABASE_URL}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-unsafe-change-me}
      DEBUG: ${DEBUG:-0}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
      DJANGO_CORS_ALLOWED_ORIGINS: ${DJANGO_CORS_ALLOWED_ORIGINS:-http://localhost:5173}
      DJANGO_CSRF_TRUSTED_ORIGINS: ${DJANGO_CSRF_TRUSTED_ORIGINS:-http://localhost:5173}
      EMAIL_CONSOLE: ${EMAIL_CONSOLE:-0}
      # (opcional) cookies/tokens si los usas
      JWT_LOGIN_RETURN_TOKENS: ${JWT_LOGIN_RETURN_TOKENS:-0}
      JWT_AUTH_COOKIE: ${JWT_AUTH_COOKIE:-access}
      JWT_AUTH_REFRESH_COOKIE: ${JWT_AUTH_REFRESH_COOKIE:-refresh}
      JWT_COOKIE_SAMESITE: ${JWT_COOKIE_SAMESITE:-Lax}
      JWT_COOKIE_SECURE: ${JWT_COOKIE_SECURE:-0}
      JWT_COOKIE_DOMAIN: ${JWT_COOKIE_DOMAIN:-}
      JWT_COOKIE_PATH: ${JWT_COOKIE_PATH:-/}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: proyecto-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  backup:
    image: postgres:15-alpine
    container_name: proyecto-backup
    depends_on:
      - db
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_DB: ${POSTGRES_DB:-claro_db_postgres}
      POSTGRES_USER: ${POSTGRES_USER:-user_claro}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password_claro}
      BACKUP_PATH: /backups
      BACKUP_KEEP: ${BACKUP_KEEP:-7}
      BACKUP_INTERVAL_SEC: ${BACKUP_INTERVAL_SEC:-86400}
    volumes:
      - ./backups:/backups
      - ./backup:/scripts:ro        # carpeta con backup.sh dentro
    entrypoint: ["sh","-c","exec sh /scripts/backup.sh"]
    restart: unless-stopped

volumes:
  postgres_data:
